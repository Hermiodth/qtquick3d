/****************************************************************************
**
** Copyright (C) 2019 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example customgeometry
    \ingroup quick3d-examples
    \title Qt Quick 3D - Custom Geometry Example
    \brief Demonstrates providing custom vertex data from C++.
    \image customgeometry-example.jpg

    This example makes use of QQuick3DGeometry and \l{Model::geometry}{the
    geometry property} of Model to render a mesh with vertex, normal, and
    texture coordinates specified from C++ instead of a pre-baked asset.

    In addition, the \l GridGeometry is also demonstrated. GridGeometry is a
    built-in QQuick3DGeometry implementation that provides a mesh with line
    primitives suitable for displaying a grid.
*/
